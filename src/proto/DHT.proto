syntax = "proto3";

package protoBuffer;
option go_package = "src/proto/stubs";

message NodeInfo {
  string id = 1;
  string host = 2;
  string port = 3;
}

message Resource {
  string key = 1;
  string value = 2;
}


//Servizi JOIN/LEAVE

message JoinRequest {
  string Host = 1;
  string Port = 2;
  string next = 3;
}

message JoinResponse {
  string status = 1;
  repeated NodeInfo childs = 2;
  repeated NodeInfo nephews = 3;
}

message LeaveRequest {
  NodeInfo nodeToLeave = 1;
  repeated NodeInfo childs = 2;
  repeated NodeInfo nephews = 3;
}

message LeaveResponse {
  string status = 1;
}


//Servizi PUT/GET (risorse)

message PutRequest {
  Resource resource = 1;
  string next = 2;
}

message PutResponse {
  string status = 2;
}

message GetRequest {
  string key = 1;
  string next = 2;
}

message GetResponse {
  Resource resource = 1;
  string status = 2;
}

message FileChunk {
  string key = 1;
  bytes chunk = 2;
}

message FileAck {
  string status = 1;
}

//Custodia chiavi/risorse

message TransferRoutingRequest {
  NodeInfo new_owner = 1;
}

message TransferRoutingResponse {
  repeated NodeInfo entries = 1;
  string status = 2;
}

message ChangeParentRequest {
  NodeInfo new_parent = 1;
}

message ChangeParentResponse {
  string status = 1;
}

//Servizi diagnostici

message PingRequest {
  string msg = 1;
}

message PingResponse {
  string reply = 1;
}

//definizione dei servizi

service DHT{
  //JOIN / LEAVE
  rpc JoinNode(JoinRequest) returns (JoinResponse);
  rpc LeaveNode(LeaveRequest) returns (LeaveResponse);

  //PUT / GET
  rpc PutResource(PutRequest) returns (PutResponse);
  rpc GetResource(GetRequest) returns (GetResponse);

  //Custodia
  rpc TransferRouting(TransferRoutingRequest) returns (TransferRoutingResponse);
  rpc ChangeParent(ChangeParentRequest) returns (ChangeParentResponse);

  //Diagnostica
  rpc Ping(PingRequest) returns (PingResponse);
}